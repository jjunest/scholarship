/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.23
 * Generated at: 2015-08-19 07:42:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manager_005fboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import crawler.Crawler_JangHakDoSa;
import crawler.Crawler_School_HanYang;
import crawler.Crawler_School_SeoulNational;
import crawler.Crawler_School_YonSei;
import crawler.Crawler_School_Korea;
import crawler.Crawler_School_SoGang;
import crawler.Crawler_School_SungKyunKwan;
import crawler.Crawler_School_KyungHee;
import crawler.Crawler_School_Hurfs;
import crawler.Crawler_School_SeoulCity;
import crawler.Crawler_School_KonKuk;
import crawler.Crawler_School_DongGuk;
import dto.ScholarVO;
import java.util.List;

public final class manager_005fCrawleringButton_005fC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

Crawler_JangHakDoSa crawlering_JangHakDosa = new Crawler_JangHakDoSa();
Crawler_School_HanYang crawlering_School_HanYang = new Crawler_School_HanYang();
Crawler_School_SeoulNational crawlering_School_SeoulNational = new Crawler_School_SeoulNational();
Crawler_School_YonSei crawlering_School_YonSei = new Crawler_School_YonSei();
Crawler_School_Korea crawlering_School_Korea = new Crawler_School_Korea();
Crawler_School_SoGang crawlering_School_SoGang = new Crawler_School_SoGang();
Crawler_School_SungKyunKwan crawlering_School_SungKyunKwan = new Crawler_School_SungKyunKwan();
Crawler_School_KyungHee crawlering_School_KyungHee = new Crawler_School_KyungHee();
Crawler_School_Hurfs crawlering_School_Hurfs = new Crawler_School_Hurfs();
Crawler_School_SeoulCity crawlering_School_SeoulCity = new Crawler_School_SeoulCity();
Crawler_School_KonKuk crawlering_School_KonKuk = new Crawler_School_KonKuk();
Crawler_School_DongGuk crawlering_School_DongGuk = new Crawler_School_DongGuk();
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t여기는 CrawlerButton_C.jsp입니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");

		request.setCharacterEncoding("UTF-8");

		String target_crawler = request.getParameter("crawler_select");

		if (target_crawler.equals("jangHakDoSa")) { //crawlering result : janghakdosa

			out.println("장학도사 사이트 크롤링 결과 <br><br>");
			List<ScholarVO> DBresultSVOs = crawlering_JangHakDosa
					.mainfunction();

			for (ScholarVO e : DBresultSVOs) {
				out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
						+ "장학금 명/재단 명 " + e.getScholarname() + "/"
						+ e.getFoundationname() + "<br>");
				out.println("------------------------------------------------<br><br>");

			}

			out.println("총 데이터베이스에 입력 시도 된 장학금 갯수 : " + DBresultSVOs.size()
					+ "  ");
			out.println("<br><br><br><br><br><br>");

		}

		else if (target_crawler.equals("dreamSpon")) { //crawlering result : dreamspon

		}

		else if (target_crawler.equals("school_SeoulNational")) { //crawlering result : seoul national university

			out.println("<br>=================== 서울대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_SeoulNational
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 서울대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================서울대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}

		else if (target_crawler.equals("school_YonSei")) { //crawlering result : seoul national university

			out.println("<br>=================== 연세대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_YonSei
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 연세대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================연세대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}

		else if (target_crawler.equals("school_Korea")) { //crawlering result : Korea university

			out.println("<br>=================== 고려대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_Korea
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 고려대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================고려대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		else if (target_crawler.equals("school_SoGang")) { //crawlering result : SoGang university

			out.println("<br>=================== 서강대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_SoGang
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 서강대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================서강대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		else if (target_crawler.equals("school_SungKyunKwan")) { //crawlering result : SungKyunKwan university

			out.println("<br>=================== 성균관대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_SungKyunKwan
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 성균관대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>====================성균관대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}

		else if (target_crawler.equals("school_HanYang")) { //crawlering result : HanYang school

			out.println("<br>=================== 한양대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_HanYang
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 한양대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================한양대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		} 
		
		else if (target_crawler.equals("school_KyungHee")) { //crawlering result : KyungHee school

			out.println("<br>=================== 경희대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_KyungHee
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 경희대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================경희대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		else if (target_crawler.equals("school_Hurfs")) { //crawlering result : Hurfs school

			out.println("<br>=================== 한국외대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_Hurfs
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 한국외대대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================한국외대대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		
		
		else if (target_crawler.equals("school_SeoulCity")) { //crawlering result : SeoulCity school

			out.println("<br>=================== 서울시립대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_SeoulCity
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 서울시립대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================서울시립 대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		else if (target_crawler.equals("school_KonKuk")) { //crawlering result : KonKuk school

			out.println("<br>=================== 건국대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_KonKuk
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 건국대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================건국 대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		
		else if (target_crawler.equals("school_DongGuk")) { //crawlering result : DongGuk school

			out.println("<br>=================== 동국대학교 크롤링 =================<br>");
			List<ScholarVO> DBresultSVOs = crawlering_School_DongGuk
					.mainfunction();

			System.out.println("여기까지도 완료!!!!!!!!!!!!!!!!!!!!!");
			System.out.println("DBresultSVOs의 개수 :" + DBresultSVOs.size());

			if (DBresultSVOs.size() != 0) {

				for (ScholarVO e : DBresultSVOs) {
					out.println(DBresultSVOs.indexOf(e) + 1 + "번 째 시도 | "
							+ "장학금 명/재단 명 " + e.getScholarname() + "/"
							+ e.getFoundationname() + "<br>");
					out.println("------------------------------------------------<br><br>");

				}

			} else {

				out.println("<br> 동국대학교 홈페이지에서 크롤링 시도 없음, 모두 DB에 존재함.===<br> ");
			}

			out.println("<br>=====================동국대학교 크롤링 끝 ====================<br>");
			out.println("<br><br>");

		}
		
		else if (target_crawler.equals("etc")) { //crawlering result : etc

		} else {
			out.println("ERROR : 선택을 다시 확인하세요");

		}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
